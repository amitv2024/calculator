{"version":3,"sources":["components/display.js","App.js","components/keypad.js","logo.svg","serviceWorker.js","index.js"],"names":["Display","props","is_valid_input","input","includes","componentWillReceiveProps","nextProp","setState","cur_val","val","textarea_ref","current","focus","process_input","cur_input","prev_val","state","symbols","out","eval","callback_func_from_parent","React","createRef","event","len","target","value","length","this","charAt","className","ref","onChange","changeHandler","bind","Component","App","parent_callback_function","prop_from_child","current_display_value","initial_display_val","parent_callback_function_display","keypad","clickHandler","nextval","onClick","id","module","exports","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4d18dc7e.chunk.js","sourcesContent":["import React, {Component}from 'react';\r\nimport './display.css'\r\n\r\nclass Display extends Component{\r\n\tconstructor(props){\r\n\t\tsuper();\r\n\t\tthis.state={\r\n\t\t\tcur_val: props.val\r\n\t\t};\r\n\t\tthis.textarea_ref=React.createRef();\r\n\t}\r\n\r\n\tis_valid_input=(input)=>{\r\n\t\treturn ['0','1','2','3','4','5','6','7','8','9','+','-','*','/','=','(',')'].includes(input)\r\n\t}\r\n\tcomponentWillReceiveProps=(nextProp)=>{\r\n\t\t\tthis.setState({\r\n\t\t\t\tcur_val: nextProp.val\r\n\t\t\t})\r\n\t\t\tthis.textarea_ref.current.focus();\r\n\t\t}\r\n\r\n\tprocess_input=(cur_input)=>{\r\n\t\tlet prev_val=this.state.cur_val;\r\n\t\tlet symbols=['+','-','*','/'];\r\n\t\t\tif(this.is_valid_input(cur_input))\r\n\t\t\t{\r\n\t\t\t\tif(symbols.includes(cur_input)){\r\n\t\t\t\t\tcur_input=' '+cur_input+' ';\r\n\t\t\t\t}\r\n\t\t\t\tlet out;\r\n\t\t\t\tif (cur_input==='='){\r\n\t\t\t\t\tout=eval(prev_val);\r\n\t\t\t\t}\r\n\t\t\t\telse if(prev_val==='0')\r\n\t\t\t\t{\r\n\t\t\t\t\tout=cur_input;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tout=prev_val+cur_input;\r\n\t\t\t\t}\r\n\t\t\t\tthis.props.callback_func_from_parent(out);\r\n\t\t\t\tthis.setState({\r\n\t\t\t\tcur_val: out\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tchangeHandler(event){\r\n\t\t\tlet len=event.target.value.length;\r\n\t\t\tif(len>this.state.cur_val.length)\r\n\t\t\t{\r\n\t\t\t\tvar cur_input=event.target.value.charAt(len-1);\r\n\t\t\t\tthis.process_input(cur_input);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tlet out;\r\n\t\t\t\tif(len===0){\r\n\t\t\t\t\t\r\n\t\t\t\t\tout='0';\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tout=event.target.value;\r\n\t\t\t\t}\r\n\t\t\t\tthis.props.callback_func_from_parent(out);\r\n\t\t\t\tthis.setState({\r\n\t\t\t\tcur_val: out\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"display\">\r\n\t\t\t\t<textarea ref={this.textarea_ref} value= {this.state.cur_val} onChange={this.changeHandler.bind(this)}></textarea>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default Display","import React,{Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Keypad from './components/keypad.js'\nimport Display from './components/display.js'\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      initial_display_val:'0'\n    }\n  }\n  parent_callback_function=(prop_from_child)=>{\n    let current_display_value\n    if(prop_from_child==='=')\n    {\n      current_display_value=eval(this.state.initial_display_val)\n    }\n    else if(prop_from_child==='C')\n    {\n      current_display_value='0'\n    }\n    else if(this.state.initial_display_val==='0'){\n        current_display_value=prop_from_child\n    }\n    else{\n      current_display_value=this.state.initial_display_val+prop_from_child\n    }\n        this.setState({\n      initial_display_val:current_display_value\n    })\n  }\n  parent_callback_function_display=(prop_from_child)=>{\n    this.setState({\n      initial_display_val: prop_from_child\n    })\n  }\n  \n  render(){\n    return(\n        <div>\n          <Display val={this.state.initial_display_val} callback_func_from_parent={this.parent_callback_function_display} />\n          <Keypad callback_func_from_parent={this.parent_callback_function}/>\n        </div>\n      )\n  }\n}\n\nexport default App;\n","import React,{Component} from 'react';\r\nimport Display from './display.js';\r\nimport './keypad.css'\r\nclass keypad extends Component\r\n{\r\n\r\n\trender(){\r\n\t\treturn(  \r\n\t\t\t<div className=\"keypad\">\r\n\t\t\t\t<button onClick={()=>this.clickHandler('1')}> 1 </button>\r\n\t\t\t\t<button onClick={()=>this.clickHandler('2')}> 2 </button>\r\n\t\t\t\t<button onClick={()=>this.clickHandler('3')}> 3 </button>\r\n\t\t\t\t<button id=\"symbol\" onClick={()=>this.clickHandler(' + ')}> + </button>\r\n\t\t\t\t<button onClick={()=>this.clickHandler('4')}> 4 </button>\r\n\t\t\t\t<button onClick={()=>this.clickHandler('5')}> 5 </button>\r\n\t\t\t\t<button onClick={()=>this.clickHandler('6')}> 6 </button>\r\n\t\t\t\t<button id=\"symbol\" onClick={()=>this.clickHandler(' - ')}> - </button>\r\n\t\t\t\t<button onClick={()=>this.clickHandler('7')}> 7 </button>\r\n\t\t\t\t<button onClick={()=>this.clickHandler('8')}> 8 </button>\r\n\t\t\t\t<button onClick={()=>this.clickHandler('9')}> 9 </button>\r\n\t\t\t\t<button id=\"symbol\" onClick={()=>this.clickHandler(' * ')}> * </button>\r\n\t\t\t\t<button id=\"symbol\" onClick={()=>this.clickHandler('C')}> C </button>\r\n\t\t\t\t<button onClick={()=>this.clickHandler('0')}> 0 </button>\r\n\t\t\t\t<button id=\"symbol\" onClick={()=>this.clickHandler('=')}> = </button>\r\n\t\t\t\t<button id=\"symbol\" onClick={()=>this.clickHandler(' / ')}> / </button>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t\t\r\n\t}\r\n\r\n\tclickHandler=(nextval)=>{\r\n\t\tthis.props.callback_func_from_parent(nextval);\r\n\t}\r\n}\r\nexport default keypad;","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}